#!/bin/sh

TEMPORARY_DIR="/tmp/temporary_joy_initialization_directory"

printf "This script will configure Joy for you!\n"

JOYSTICKS="$(ls /dev/input | grep 'js.')"
printf "\nYou have these joysticks currently active:\n"
for STICK in $JOYSTICKS; do
    printf " -> %s\n" "$STICK"
done

printf "\n"
printf "%s\n" \
       "Lets perform a test to properly identify your joystick. I'll be running" \
       "the 'jstest' command in the background to determine if your joystick is" \
       "working. All you need to do is press buttons on your joystick until I" \
       "say stop. Before we start, I'll need your sudo password for 'jstest'."

while true; do
    read -p "Sudo password: " PASSWORD
    echo "$PASSWORD" | sudo -S [ "0" -eq "0" ] 1> /dev/null 2>&1
    if [ "$?" -eq "0" ]; then
        break
    else
        printf "Wrong password...\n"
    fi
done

rm -rf "$TEMPORARY_DIR"
mkdir -p "$TEMPORARY_DIR"

sleep 1
printf "\nBeginning test!\n"
exit 1
for STICK in $JOYSTICKS; do
    sudo jstest --event "/dev/input/$STICK" 1> "$TEMPORARY_DIR/$STICK" &
    # will be okay with sudo here
    # separate, let jstest run concurrently""
    printf "Testing %s" "$STICK"
    for DOT in 1 2 3 4; do
        sleep 0.5
        printf "."
    done
    printf "\n"
    sudo pkill jstest
done

ACTIVE_STICK=false
ACTIVE_STICK_EVENT_COUNT=10
EVENT_LINE="^Event: type [0-9],.*$"
for STICK in $JOYSTICKS; do
    STICK_EVENT_COUNT="$(grep "$EVENT_LINE" "$TEMPORARY_DIR/$STICK" | wc -l)"
    if [ "$STICK_EVENT_COUNT" -gt "$ACTIVE_STICK_EVENT_COUNT" ]; then
        ACTIVE_STICK_EVENT_COUNT="$STICK_EVENT_COUNT"
        ACTIVE_STICK="$STICK"
    fi
done

if [ "$ACTIVE_STICK" = "false" ]; then
    printf "Stick not detected\n"
    #exit 1
else
    printf "Your active stick is %s\n" "$ACTIVE_STICK"
fi

sudo chmod a+rw "/dev/input/$ACTIVE_STICK"
